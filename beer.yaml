openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
  description: Specification for OPENAPI course
  termsOfService: http://example.com/terms
  contact:
    name: Antony George
    url: https://antonyjoy.george.com
    email: antonyjoy.george@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://dev.example.com
    description: Development
  - url: https://qa.example.com
    description: QA
  - url: https://prod.example.com
    description: Production

paths:
  /v1/beers:
    get:
      responses:
        "200":
          description: List of Beers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeerList"

        "404":
          description: (Not Fount) response

components:
  schemas:
    Beer:
      type: object
      description: Beer Object
      properties:
        beerName:
          type: string
          minLength: 2
          maxLength: 100
          example: King Fisher
        style:
          type: string
          enum:
            - ALE
            - PALE_ALE
            - IPA
            - WHEAT
            - LAGER
        upc:
          type: string
          minLength: 2
          maxLength: 100
          example: King Fisher
        price:
          type: number
          format: float
        quantityonhand:
          type: integer
          format: int32
        brewery:
          $ref: "#/components/schemas/Brewery"
    Brewery:
      type: object
      properties:
        name:
          type: string
          example: King Fisher
        location:
          type: string
          example: King Fisher
    BeerList:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: "#/components/schemas/Beer"
