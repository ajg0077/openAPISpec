openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
  description: Specification for OPENAPI course
  termsOfService: http://example.com/terms
  contact:
    name: Antony George
    url: https://antonyjoy.george.com
    email: antonyjoy.george@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://dev.example.com
    description: Development
  - url: https://qa.example.com
    description: QA
  - url: https://prod.example.com
    description: Production

paths:
  /v1/customers:
    get:
      parameters:
        - $ref: "#/components/parameters/PageNumberParam"
        - $ref: "#/components/parameters/PageSizeParam"

      responses:
        "200":
          description: List of Customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPagedList"

  /v1/customers/{customerId}:
    get:
      parameters:
        - $ref: "#/components/parameters/CustomerIdParam"
      responses:
        "200":
          description: Customer found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
components:
  parameters:
    PageNumberParam:
      name: pageNumber
      in: query
      description: Page Number
      schema:
        type: integer
        format: int32
        default: 1
    PageSizeParam:
      name: pageSize
      in: query
      description: Page Size
      schema:
        type: integer
        format: int32
        default: 25
    CustomerIdParam:
      name: customerId
      in: path
      description: CustomerId
      required: true
      schema:
        type: string
        format: uuid

  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 123 street
        city:
          type: string
          example: Trivandrum
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          # enum: [KL,TN, KA, AP]
          enum:
            - KL
            - TN
            - KA
            - AP
        zipcode:
          type: string
          example: 44556
    Customer:
      type: object
      description: Customer Object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 100
          example: Antony
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: George
        address:
          $ref: "#/components/schemas/Address"
    CustomerList:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: "#/components/schemas/Customer"

    CustomerPagedList:
      type: object
      properties:
        content:
          $ref: "#/components/schemas/CustomerList"
      allOf:
        - $ref: "#/components/schemas/PagedResponse"

    PagedResponse:
      type: object
      properties:
        pageable:
          $ref: "#/components/schemas/PagedResponse_pageable"
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/PagedResponse_pageable_sort"
        first:
          type: boolean
    PagedResponse_pageable_sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PagedResponse_pageable:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/PagedResponse_pageable_sort"
        offset:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
